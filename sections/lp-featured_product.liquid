<!-- Swiper CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper/swiper-bundle.min.css">

<!-- Swiper JS -->
<script src="https://cdn.jsdelivr.net/npm/swiper/swiper-bundle.min.js"></script>

<div class="page-width lp-featured_product-container">
  <div class="lp-featured_product-left-container">
    {% assign product = section.settings.product %}
    <div class="product-carousel">
      <!-- Main Image Carousel -->
      <div class="swiper main-carousel">
        <div class="swiper-wrapper">
          {% for image in product.images %}
            <div class="swiper-slide">
              <img src="{{ image.src | img_url: '1024x1024' }}" alt="{{ image.alt | escape }}">
            </div>
          {% endfor %}
        </div>
        <!-- Navigation Arrows -->
        <div class="swiper-button-prev"></div>
        <div class="swiper-button-next"></div>
      </div>

      <!-- Thumbnail Carousel -->
      <div class="swiper thumbnail-carousel">
        <div class="swiper-wrapper">
          {% for image in product.images %}
            <div class="swiper-slide">
              <img src="{{ image.src | img_url: '100x100' }}" alt="{{ image.alt | escape }}">
            </div>
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
  <div class="lp-featured_product-right-container"></div>
</div>

<style>
  /* Navigation Buttons */
  .swiper-button-prev,
  .swiper-button-next {
    color: #007aff;
    background: rgba(255, 255, 255, 0.8);
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    transition: transform 0.3s, background-color 0.3s;
  }

  .swiper-button-prev:hover,
  .swiper-button-next:hover {
    transform: scale(1.1);
    background: #007aff;
    color: #fff;
  }

  .swiper-button-prev::after,
  .swiper-button-next::after {
    font-size: 1.2rem;
  }

  .product-carousel {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
  }

  .main-carousel {
    width: 80%;
  }

  .main-carousel img {
    width: 100%;
    border-radius: 10px;
  }

  .thumbnail-carousel {
    width: 80%;
    display: flex;
  }

  .thumbnail-carousel .swiper-slide {
    width: auto !important;
    cursor: pointer;
    transition: border-color 0.3s;
  }

  .thumbnail-carousel img {
    width: 80px;
    height: 80px;
    object-fit: cover;
    border: 2px solid transparent;
    border-radius: 5px;
  }

  .thumbnail-carousel .swiper-slide-active img {
    border-color: #007aff;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Initialize the thumbnail carousel
    const thumbnailCarousel = new Swiper('.thumbnail-carousel', {
      slidesPerView: 'auto',
      spaceBetween: 10,
      watchSlidesProgress: true,
      slideToClickedSlide: true, // Allows clicking thumbnails to navigate the main carousel
    });

    // Initialize the main carousel
    const mainCarousel = new Swiper('.main-carousel', {
      loop: true,
      autoplay: {
        delay: 3000,
        disableOnInteraction: false,
      },
      slidesPerView: 1,
      spaceBetween: 10,
      navigation: {
        nextEl: '.swiper-button-next', // Bind next button
        prevEl: '.swiper-button-prev', // Bind previous button
      },
      thumbs: {
        swiper: thumbnailCarousel, // Link the thumbnail carousel
      },
      on: {
        slideChange: function () {
          // Ensure the thumbnail carousel slides to make the active thumbnail visible
          const activeIndex = this.realIndex;
          thumbnailCarousel.slideTo(activeIndex);
        },
      },
    });

    // Ensure the active thumbnail gets proper styles
    mainCarousel.on('slideChange', function () {
      const activeIndex = mainCarousel.realIndex;

      // Update the active border for thumbnails
      document.querySelectorAll('.thumbnail-carousel .swiper-slide').forEach((slide, index) => {
        const img = slide.querySelector('img');
        if (index === activeIndex) {
          img.style.borderColor = '#007aff'; // Active border color
        } else {
          img.style.borderColor = 'transparent'; // Default border color
        }
      });
    });

    // Sync thumbnails on click
    thumbnailCarousel.on('click', function () {
      const clickedIndex = thumbnailCarousel.clickedIndex;
      if (clickedIndex !== undefined) {
        mainCarousel.slideToLoop(clickedIndex);
      }
    });
  });
</script>
{% schema %}
{
  "name": "LP Featured Product",
  "settings": [
    {
      "type": "product",
      "id": "product",
      "label": "Product"
    }
  ],
  "presets": [
    {
      "name": "LP Featured Product"
    }
  ]
}
{% endschema %}
