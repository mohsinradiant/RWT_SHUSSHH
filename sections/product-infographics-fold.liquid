{% if product.metafields.content.combos_collection %}
  <div class="infinite-carousel">
    <div class="page-width">
      <h2 class="section-heading">{{ section.settings.section_heading }}</h2>
      <div class="carousel-container">
        <div class="combos-carousel-track">
          {% assign collection = product.metafields.content.combos_collection.value %}
          {% if collection and collection.products.size > 0 %}
            {% for product in collection.products %}
              {% comment %}
                <div class="carousel-item">
                  <a href="{{ product.url }}">
                    <img src="{{ product.featured_image | img_url: 'large' }}" alt="{{ product.featured_image.alt }}">
                  </a>
                </div>
              {% endcomment %}
              {% render 'card-product',
                card_product: product,
                show_secondary_image: true,
                lazy_load: true,
                quick_add: 'standard',
                section_id: section.id,
                horizontal_quick_add: true,
                show_rating: false,
                media_aspect_ratio: 'square'
              %}
            {% endfor %}
          {% else %}
            <p>No products found in the specified collection.</p>
          {% endif %}
        </div>
      </div>
      <div class="carousel-dots">
        {% if collection and collection.products.size > 0 %}
          {% for product in collection.products %}
            <button class="dot" data-index="{{ forloop.index0 }}"></button>
          {% endfor %}
        {% endif %}
      </div>
      <button class="carousel-arrow left">
        <img src="https://cdn.shopify.com/s/files/1/0767/6297/2470/files/Group_323.png?v=1738057124">
      </button>
      <button class="carousel-arrow right" style="transform: rotate(180deg);">
        <img src="https://cdn.shopify.com/s/files/1/0767/6297/2470/files/Group_323.png?v=1738057124">
      </button>
    </div>
  </div>
{% endif %}
<style>
  .infinite-carousel {
    background-color: #faf3ff;
    padding-top: 50px;
    padding-bottom: 50px;
    font-size: 3rem;
    line-height: 2rem;
  }
  .infinite-carousel .page-width {
    position: relative;
    overflow: hidden;
  }
  .infinite-carousel .section-heading {
    margin-top: 0 !important;
  }
  #shopify-section-template--23829512061238__product_infographics_fold_7ecJwW {
    background-color: #faf3ff;
  }

  .carousel-container {
    display: flex;
    justify-content: center;
    width: 100%;
    position: relative;
    overflow: hidden;
  }

  .combos-carousel-track {
    display: flex;
    transition: transform 0.5s ease-in-out;
    gap: 0.5%;
  }

  .carousel-item,
  .combos-carousel-track .card-wrapper {
    min-width: 33%;
    max-width: 33%;
  }

  .carousel-item img {
    width: 100%;
    border-radius: 15px;
  }

  .carousel-dots {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin-top: 20px;
  }

  .dot {
    width: 5px;
    height: 5px;
    aspect-ratio: 1 / 1;
    border-radius: 50%;
    background-color: #cdcdcd;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease, background-color 0.3s ease;
    display: inline-block;
    padding: 0;
  }

  .dot.active {
    background-color: #d5b7e0;
  }

  .carousel-arrow {
    width: 40px;
    height: 40px;
    aspect-ratio: 1/1;
    position: absolute;
    top: 55%;
    transform: translateY(-50%);
    border: none;
    cursor: pointer;
    padding: 0;
    border-radius: 50%;
    transition: all 0.3s ease;
    background-color: transparent;
  }
  .carousel-arrow img {
    width: 100%;
    height: 100%;
  }
  .carousel-arrow:hover {
    scale: 1.2;
  }

  .carousel-arrow.left {
    left: 30px;
  }

  .carousel-arrow.right {
    right: 30px;
  }
  @media (max-width: 850px) {
    .carousel-item,
    .combos-carousel-track .card-wrapper {
      width: 230px;
    }
    .carousel-container,
    .combos-carousel-track .card-wrapper {
      justify-content: start;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const combosTrack = document.querySelector('.combos-carousel-track');
    const combosItems = Array.from(combosTrack.children);
    const combosLeftArrow = document.querySelector('.carousel-arrow.left');
    const combosRightArrow = document.querySelector('.carousel-arrow.right');
    const combosDotsContainer = document.querySelector('.carousel-dots');

    const totalItems = combosItems.length;
    let currentIndex = 0;
    let startX = 0,
      isDragging = false,
      moveX = 0;

    // Generate dots dynamically
    combosDotsContainer.innerHTML = combosItems
      .map((_, i) => `<button class="dot ${i === 0 ? 'active' : ''}" data-index="${i}"></button>`)
      .join('');
    const dots = Array.from(combosDotsContainer.children);

    const updateCarousel = () => {
      const itemWidth = combosItems[0].getBoundingClientRect().width;
      const offset = currentIndex * itemWidth; // Offset based on current index

      combosTrack.style.transition = 'transform 0.3s ease-in-out';
      combosTrack.style.transform = `translateX(-${offset}px)`; // Move the track

      // Update active dot
      dots.forEach((dot, index) => {
        dot.classList.toggle('active', index === currentIndex);
      });
    };

    const moveToNext = () => {
      if (currentIndex < totalItems - 1) {
        currentIndex++;
      } else {
        currentIndex = 0; // Loop back to the first item
      }
      updateCarousel();
    };

    const moveToPrevious = () => {
      if (currentIndex > 0) {
        currentIndex--;
      } else {
        currentIndex = totalItems - 1; // Loop back to the last item
      }
      updateCarousel();
    };

    // Click Event Listeners for Arrows
    combosRightArrow.addEventListener('click', moveToNext);
    combosLeftArrow.addEventListener('click', moveToPrevious);

    // Click Event for Dots
    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        currentIndex = index;
        updateCarousel();
      });
    });

    // Touch & Drag Support
    combosTrack.addEventListener('touchstart', (e) => {
      startX = e.touches[0].clientX;
      isDragging = true;
      combosTrack.style.transition = 'none'; // Disable smooth scrolling while dragging
    });

    combosTrack.addEventListener('touchmove', (e) => {
      if (!isDragging) return;
      moveX = e.touches[0].clientX - startX;
    });

    combosTrack.addEventListener('touchend', () => {
      if (moveX < -50) {
        moveToNext();
      } else if (moveX > 50) {
        moveToPrevious();
      }
      isDragging = false;
    });

    combosTrack.addEventListener('mousedown', (e) => {
      startX = e.clientX;
      isDragging = true;
      combosTrack.style.transition = 'none'; // Disable smooth scrolling while dragging
    });

    combosTrack.addEventListener('mousemove', (e) => {
      if (!isDragging) return;
      moveX = e.clientX - startX;
    });

    combosTrack.addEventListener('mouseup', () => {
      if (moveX < -50) {
        moveToNext();
      } else if (moveX > 50) {
        moveToPrevious();
      }
      isDragging = false;
    });

    setInterval(moveToNext, 8000); // Automatic slide every 8 seconds
  });
</script>

{% schema %}
{
  "name": "Product Combos Fold",
  "settings": [
    {
      "type": "text",
      "id": "section_heading",
      "label": "Section Heading",
      "default": "Discover Whatâ€™s Making Everyone Go Wild!"
    }
  ],
  "presets": [
    {
      "name": "Product Combos Fold"
    }
  ]
}
{% endschema %}
