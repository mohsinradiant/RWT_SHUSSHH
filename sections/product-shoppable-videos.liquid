<div class="product-shoppable-videos">
  <h2 class="section-heading">{{ section.settings.section_heading }}</h2>
  <div class="page-width">
    {% for testimonial in product.metafields.content.product_shoppable_videos.value %}
      <div class="product-shoppable-video-block">
        <div class="product-shoppable-video-container" style="position: relative;">
          <!-- Play & Pause Icons -->
          <div class="play-pause-icon play-icon visible" id="play-icon-{{ forloop.index }}">
            <img src="https://cdn.shopify.com/s/files/1/0767/6297/2470/files/Group_335.png?v=1738186522" alt="Play">
          </div>
          <div class="play-pause-icon pause-icon" id="pause-icon-{{ forloop.index }}">
            <img src="https://cdn.shopify.com/s/files/1/0767/6297/2470/files/Group_334.png?v=1738186521" alt="Pause">
          </div>

          <!-- Placeholder Image -->
          <img src="{{ testimonial.placeholder | img_url: 'medium' }}" class="product-shoppable-video-image">

          <!-- Video Container (Initially Hidden) -->
          <div class="product-shoppable-product-shoppable-video-container" style="display: none;">
            {{ testimonial.video.value | video_tag: autoplay: false, loop: true, muted: false, controls: false }}
          </div>
        </div>

        {% assign product = testimonial.product.value %}
        {% if product %}
          <div class="product-card">
            <a href="{{ product.url }}" class="product-link">
              <img
                src="{{ product.featured_image | img_url: 'medium' }}"
                alt="{{ product.title }}"
                class="product-image"
              >
              <div class="product-info">
                <h3 class="product-title">{{ product.title }}</h3>
                <p class="product-prices">
                  {% if product.compare_at_price > product.price %}
                    <span class="sale-price">{{ product.price | money }}</span>
                    <span class="regular-price">{{ product.compare_at_price | money }}</span>
                  {% else %}
                    <span class="regular-price">{{ product.price | money }}</span>
                  {% endif %}
                </p>
              </div>
            </a>
          </div>
        {% endif %}
      </div>
    {% endfor %}
  </div>
</div>
<style>
  .product-shoppable-video-block {
    transition: all 0.3s ease-in-out;
  }

  .product-shoppable-video-block.active {
    min-width: 19%;
  }
  .play-pause-icon {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 50px;
    height: 50px;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
    cursor: pointer;
  }

  .play-pause-icon.visible {
    opacity: 1;
  }

  .play-icon.visible {
    opacity: 1;
  }
  .product-shoppable-product-shoppable-video-container {
    background-color: #faf3ff;
  }
  .product-shoppable-videos {
    background-color: #faf3ff;
    padding-top: 50px;
    padding-bottom: 50px;
  }
  .product-shoppable-videos .page-width {
    display: flex;
    gap: 0.5%;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
    scrollbar-width: none;
  }
  .product-shoppable-videos .section-heading {
    margin-top: 0;
  }

  .product-shoppable-videos .page-width::-webkit-scrollbar {
    display: none;
  }

  .product-shoppable-video-block {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    border-radius: 10px;
    scroll-snap-align: start;
    min-width: 16%;
    cursor: pointer;
  }
  .product-shoppable-video-container img {
    width: 100%;
    display: flex;
    height: auto;
  }
  .product-info h3,
  .product-info span {
    color: #fff;
  }
  .product-shoppable-video-container {
    width: 100%;
    aspect-ratio: 147 / 240;
    overflow: hidden;
    border-radius: 10px;
    height: auto;
  }
  .product-shoppable-video-container video {
    width: 100%;
    height: 100%;
    margin-bottom: 15px;
    aspect-ratio: 147 / 240;
    border-radius: 10px;
  }

  .product-card {
    display: flex;
  }

  .product-link {
    text-decoration: none;
    display: flex;
    justify-content: start;
    gap: 10px;
    align-items: center;
    padding: 10px;
    position: absolute;
    bottom: 0;
    left: 10px;
    right: 10px;
  }

  .product-image {
    width: 25%;
    border-radius: 50%;
  }

  .product-title {
    font-size: 2rem;
    font-weight: 500;
    margin: 0;
    font-family: 'Kanit', sans-serif;
  }

  .product-prices {
    font-size: 1.3rem;
    letter-spacing: 0px;
    margin: 0;
    font-family: 'Kanit', sans-serif;
  }

  .sale-price {
    color: #000000;
    font-weight: 500;
    margin-right: 5px;
  }

  .regular-price {
    text-decoration: line-through;
    color: #00000070;
  }
  @media (max-width: 500px) {
    .product-shoppable-video-block {
      min-width: 220px;
    }
    .product-shoppable-videos .page-width {
      margin-left: 10px;
    }
  }
</style>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const videoBlocks = document.querySelectorAll('.product-shoppable-video-block');
    const videoContainers = document.querySelectorAll('.product-shoppable-video-container');

    function setActiveVideo(targetBlock) {
      videoBlocks.forEach((block) => block.classList.remove('active'));
      targetBlock.classList.add('active');
    }

    // Initially set the 3rd video block as active (if exists)
    if (videoBlocks.length >= 3) {
      videoBlocks[2].classList.add('active');
    } else if (videoBlocks.length > 0) {
      videoBlocks[0].classList.add('active'); // Fallback to first if less than 3 exist
    }

    videoContainers.forEach((block, index) => {
      const image = block.querySelector('.product-shoppable-video-image');
      const videoContainer = block.querySelector('.product-shoppable-product-shoppable-video-container');
      const video = videoContainer.querySelector('video');

      const playIcon = document.getElementById(`play-icon-${index + 1}`);
      const pauseIcon = document.getElementById(`pause-icon-${index + 1}`);

      function showTemporaryIcon(icon) {
        icon.classList.add('visible');
        setTimeout(() => {
          icon.classList.remove('visible');
        }, 800);
      }

      // Show play icon initially
      playIcon.classList.add('visible');

      // When image is clicked, show video & play
      image.addEventListener('click', () => {
        setActiveVideo(videoBlocks[index]);
        image.style.display = 'none'; // Hide placeholder
        videoContainer.style.display = 'flex'; // Show video
        video.play();
        playIcon.classList.remove('visible'); // Hide play icon
        showTemporaryIcon(pauseIcon); // Show pause icon briefly
      });

      // Toggle play/pause on video click
      video.addEventListener('click', () => {
        if (video.paused) {
          video.play();
          playIcon.classList.remove('visible');
          showTemporaryIcon(pauseIcon);
        } else {
          video.pause();
          videoContainer.style.display = 'none'; // Hide video
          image.style.display = 'flex'; // Show placeholder
          playIcon.classList.add('visible'); // Show play icon
        }
      });

      // Show play icon when video is paused
      video.addEventListener('pause', () => {
        videoContainer.style.display = 'none'; // Hide video
        image.style.display = 'flex'; // Show placeholder
        playIcon.classList.add('visible'); // Always show play icon
      });

      // Hide play icon & briefly show pause icon when playing
      video.addEventListener('play', () => {
        playIcon.classList.remove('visible');
        showTemporaryIcon(pauseIcon);
      });
    });

    // Detect the middle video in the viewport and set it active
    function updateActiveOnScroll() {
      let middleIndex = Math.floor(videoBlocks.length / 2);
      let minDistance = Infinity;
      let activeBlock = videoBlocks[middleIndex]; // Default middle block

      videoBlocks.forEach((block) => {
        const rect = block.getBoundingClientRect();
        const distanceFromCenter = Math.abs(window.innerHeight / 2 - (rect.top + rect.height / 2));

        if (distanceFromCenter < minDistance) {
          minDistance = distanceFromCenter;
          activeBlock = block;
        }
      });

      setActiveVideo(activeBlock);
    }

    window.addEventListener('scroll', updateActiveOnScroll);
    window.addEventListener('resize', updateActiveOnScroll);
  });
</script>
{% schema %}
{
  "name": "Product Shoppable Videos",
  "settings": [
    {
      "type": "text",
      "id": "section_heading",
      "label": "Section Heading",
      "default": "Discover Whatâ€™s Making Everyone Go Wild!"
    }
  ],
  "presets": [
    {
      "name": "Product Shoppable Videos"
    }
  ]
}
{% endschema %}
