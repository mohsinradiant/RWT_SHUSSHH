<div class="page-width product-content-fold-container">
  {% if product.metafields.content.product_video.value.video.value %}
    <div class="product-content-fold-container-parent">
      <div class="play-pause-icon visible" id="play-icon">
        <img src="https://cdn.shopify.com/s/files/1/0767/6297/2470/files/play.png?v=1738176698" alt="Play">
      </div>
      <div class="play-pause-icon" id="pause-icon">
        <img src="https://cdn.shopify.com/s/files/1/0767/6297/2470/files/pause.png?v=1738176699" alt="Pause">
      </div>
      <img src="{{ product.metafields.content.product_video.value.placeholder | image_url }}" class="video-placeholder">
      <div style="display: none;" class="product-content-fold_video">
        {{
          product.metafields.content.product_video.value.video.value
          | video_tag: autoplay: false, loop: true, muted: false, controls: true
        }}
      </div>
    </div>
  {% elsif product.metafields.content.info_images.value %}
    <div class="product-content-fold-container-parent-carousel">
      <div class="carousel-wrapper-custom">
        <button class="carousel-btn-custom left-btn-custom">
          <img src="https://cdn.shopify.com/s/files/1/0767/6297/2470/files/Group_323.png?v=1738057124">
        </button>
        <div class="carousel-track-custom">
          {% for image in product.metafields.content.info_images.value %}
            <img class="carousel-item-custom" src="{{image | image_url}}">
          {% endfor %}
        </div>
        <button class="carousel-btn-custom right-btn-custom">
          <img
            style="transform: rotate(180deg);"
            src="https://cdn.shopify.com/s/files/1/0767/6297/2470/files/Group_323.png?v=1738057124"
          >
        </button>
      </div>
      <div class="carousel-indicators-custom">
        {% for image in product.metafields.content.info_images.value %}
          <button class="dot-custom" data-index="{{ forloop.index0 }}"></button>
        {% endfor %}
      </div>
    </div>
  {% endif %}
  <div class="product-content-fold-right">
    {% if product.metafields.content.content_fold_text %}
      <div class="product-content-fold">
        {% for metaobject in product.metafields.content.content_fold_text.value %}
          {% if metaobject.title and metaobject.description %}
            <div class="product-content-fold-item">
              <button class="product-content-fold-question" aria-expanded="false">
                <span>{{ metaobject.title }}</span>
                <span class="product-content-fold-toggle-icon">+</span>
              </button>
              <div class="product-content-fold-answer">
                {% if metaobject.file.value %}
                  <img src="{{ metaobject.file.value |  image_url }}">
                {% endif %}
                <p>{{ metaobject.description | metafield_tag }}</p>
              </div>
            </div>
          {% endif %}
        {% endfor %}
      </div>
    {% endif %}

    <div class="">
      <button class="product-content-fold-question" aria-expanded="false">
        <span>What's in the box</span>
      </button>
      <div
        style="padding: 25px 0 10px; height: fit-content;"
        class="product-content-fold-answer product-content-fold-answer-image-container-parent"
      >
        {% for image in product.metafields.content.whats_in_the_box.value %}
          <div class="product-content-fold-answer-image-container">
            <img src="{{ image | image_url }}">
          </div>
        {% endfor %}
      </div>
    </div>
  </div>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const image = document.querySelector('.video-placeholder');
    const videoContainer = document.querySelector('.product-content-fold_video');
    const video = videoContainer ? videoContainer.querySelector('video') : null;

    const playIcon = document.getElementById('play-icon');
    const pauseIcon = document.getElementById('pause-icon');

    function showIcon(icon) {
      icon.classList.add('visible');
      setTimeout(() => {
        icon.classList.remove('visible');
      }, 1000); // Show for 1 second
    }

    if (image && videoContainer && video) {
      // Initially hide the video container and display the play icon
      videoContainer.style.display = 'none';
      playIcon.classList.add('visible');

      // When the image is clicked
      image.addEventListener('click', () => {
        image.style.display = 'none'; // Hide the image
        videoContainer.style.display = 'block'; // Show the video
        video.play(); // Play the video
        playIcon.classList.remove('visible'); // Hide the play icon
        showIcon(pauseIcon); // Temporarily show the pause icon
      });

      // When the video is paused
      video.addEventListener('pause', () => {
        videoContainer.style.display = 'none'; // Hide the video
        image.style.display = 'block'; // Show the image
        showIcon(playIcon); // Temporarily show the play icon
      });

      // When the video is played again (optional: on play event)
      video.addEventListener('play', () => {
        showIcon(pauseIcon); // Temporarily show the pause icon
      });
    } else {
      console.error('Required elements for video interaction are missing.');
    }
  });
</script>

<style>
  .play-pause-icon {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 10;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.5s ease-in-out;
    width: 50px;
    height: 50px;
  }

  .play-pause-icon.visible {
    opacity: 1;
  }

  .play-pause-icon img {
    width: 50px; /* Adjust size as needed */
    height: 50px;
  }
  .product-content-fold_video {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .product-content-fold-container {
    display: flex;
    justify-content: center;
    align-items: stretch;
    gap: 1%;
    margin-top: 50px;
    margin-bottom: 50px;
    height: fit-content;
  }
  .product-content-fold-container-parent {
    width: 60%;
    position: relative;
    cursor: pointer;
    height: auto;
  }
  .product-content-fold-container-parent-carousel {
    width: 50%;
    height: auto;
    aspect-ratio: 1/1;
    overflow: hidden;
    position: relative;
    cursor: pointer;
    height: auto;
    border-radius: 15px;
  }
  .product-content-fold-container img,
  .product-content-fold-container video {
    width: 100%;
    border-radius: 15px;
    height: 100%;
  }

  .product-content-fold-question span {
    font-family: 'Kanit', sans-serif;
    font-size: 1.8rem;
    font-weight: 400;
    letter-spacing: 0;
  }
  .product-content-fold-right {
    max-height: auto;
    overflow-y: auto;
    width: 49%;
    padding: 20px;
    background: #faf3ff;
    border-radius: 15px;
  }
  .product-content-fold-right .product-content-fold .product-content-fold-item {
    margin-bottom: 1rem;
    border-bottom: 1px solid #ddd;
    padding-bottom: 1rem;
  }
  .product-content-fold-right .product-content-fold-item {
    border-bottom: 0;
    margin-bottom: 0;
    padding-bottom: 0;
  }
  .product-content-fold-question {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: none;
    border: none;
    font-size: 1rem;
    font-weight: bold;
    cursor: pointer;
    width: 100%;
    text-align: left;
    padding: 0;
  }
  .product-content-fold-toggle-icon {
    padding: 4px;
    border: solid 2px #333333;
    border-radius: 50%;
    display: flex;
    height: 30px;
    width: 30px;
    line-height: 12px;
    font-size: 4rem !important;
    font-weight: 300 !important;
    scale: 0.7;
  }
  .product-content-fold-answer {
    overflow: hidden;
    height: 0;
    transition: height 0.3s ease, padding 0.3s ease;
  }
  .product-content-fold-answer p {
    margin: 0;
    font-size: 1.2rem;
    letter-spacing: 0;
    font-family: 'Kanit';
    line-height: 1.5rem;
  }
  .product-content-fold-answer img {
    width: 100% !important;
    height: auto !important;
  }
  .product-content-fold-answer-image-container {
    display: flex;
    width: 21%;
    height: auto;
    aspect-ratio: 1 / 1;
    overflow: hidden;
    padding: 9px;
    justify-content: center;
    background-color: white;
    align-items: center;
    border-radius: 10px;
  }
  .product-content-fold-container .product-content-fold-answer img {
    aspect-ratio: unset;
    height: 100% !important;
    width: fit-content !important;
    border-radius: 0;
  }
  .product-content-fold-answer-image-container-parent {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 5.33%;
  }
  /* carousel */

  .carousel-wrapper-custom {
    position: relative;
    display: flex;
    align-items: center;
  }

  .carousel-track-custom {
    display: flex;
    transition: transform 0.5s ease;
    width: 100%;
  }

  .carousel-item-custom {
    min-width: 100%;
    border-radius: 0 !important;
  }

  .carousel-btn-custom {
    position: absolute;
    top: 50%;
    width: 40px;
    height: 40px;
    transform: translateY(-50%);
    border: none;
    cursor: pointer;
    z-index: 10;
    background: transparent;
    border-radius: 240px;
    padding: 0;
  }

  .left-btn-custom {
    left: 20px;
  }

  .right-btn-custom {
    right: 20px;
  }

  .carousel-indicators-custom {
    display: flex;
    gap: 10px;
    justify-content: center;
    margin-top: -30px;
    position: absolute;
    bottom: 20px;
    left: 0;
    z-index: 9;
    right: 0;
  }

  .dot-custom {
    width: 5px;
    height: 5px;
    aspect-ratio: 1 / 1;
    border-radius: 50%;
    background-color: #cdcdcd;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease, background-color 0.3s ease;
    display: inline-block;
    padding: 0;
  }

  .dot-custom.active {
    background-color: #d5b7e0;
  }
  @media (max-width: 850px) {
    .product-content-fold-container {
      flex-direction: column;
      gap: 15px;
    }
    .product-content-fold-container-parent {
      width: 100%;
    }
    .product-content-fold-container-parent-carousel {
      width: 100%;
    }
    .product-content-fold-right {
      width: 100%;
      max-height: max-content;
    }
    .product-content-fold-answer-image-container {
      width: 21%;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const faqItems = document.querySelectorAll('.product-content-fold-item');

    faqItems.forEach((item) => {
      const question = item.querySelector('.product-content-fold-question');
      const answer = item.querySelector('.product-content-fold-answer');
      const icon = item.querySelector('.product-content-fold-toggle-icon');

      question.addEventListener('click', function () {
        // Close all other answers before opening the current one
        faqItems.forEach((otherItem) => {
          if (otherItem !== item) {
            const otherAnswer = otherItem.querySelector('.product-content-fold-answer');
            const otherIcon = otherItem.querySelector('.product-content-fold-toggle-icon');
            otherAnswer.style.height = '0';
            otherAnswer.style.padding = '0';
            otherIcon.textContent = '+';
          }
        });

        // Check if the current item is already expanded
        const isExpanded = answer.style.height !== '0px';

        // Toggle the current answer
        if (isExpanded) {
          answer.style.height = '0';
          answer.style.padding = '0';
          icon.textContent = '+';
        } else {
          // Set the height to fit-content + 20px
          answer.style.height = `${answer.scrollHeight + 20}px`;
          answer.style.padding = '10px 0';
          icon.textContent = '-';
        }
      });
    });
  });
</script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const track = document.querySelector('.carousel-track-custom');
    const items = document.querySelectorAll('.carousel-item-custom');
    const dots = document.querySelectorAll('.dot-custom');
    const prevBtn = document.querySelector('.left-btn-custom');
    const nextBtn = document.querySelector('.right-btn-custom');
    const itemCount = items.length;

    let currentIndex = 0;

    const updateCarousel = () => {
      track.style.transform = `translateX(-${currentIndex * 100}%)`;
      dots.forEach((dot, index) => {
        dot.classList.toggle('active', index === currentIndex);
      });
    };

    prevBtn.addEventListener('click', () => {
      currentIndex = (currentIndex - 1 + itemCount) % itemCount;
      updateCarousel();
    });

    nextBtn.addEventListener('click', () => {
      currentIndex = (currentIndex + 1) % itemCount;
      updateCarousel();
    });

    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        currentIndex = index;
        updateCarousel();
      });
    });

    // Swipe functionality
    let startX;
    track.addEventListener('touchstart', (e) => {
      startX = e.touches[0].clientX;
    });

    track.addEventListener('touchmove', (e) => {
      if (!startX) return;
      const endX = e.touches[0].clientX;
      const diff = startX - endX;

      if (diff > 50) {
        nextBtn.click();
      } else if (diff < -50) {
        prevBtn.click();
      }

      startX = null;
    });

    updateCarousel();
  });
</script>
{% schema %}
{
  "name": "Product Content Fold",
  "settings": [
    {
      "type": "image_picker",
      "id": "image",
      "label": "Image"
    }
  ],
  "blocks": [],
  "presets": [
    {
      "name": "Product Content Fold"
    }
  ]
}
{% endschema %}
