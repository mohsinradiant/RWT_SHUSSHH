{% comment %}
  Renders product variant options

  Accepts:
  - product: {Object} product object.
  - option: {Object} current product_option object.
  - block: {Object} block object.
  - picker_type: {String} type of picker to dispay


  Usage:
  {% render 'product-variant-options',
    product: product,
    option: option,
    block: block
    picker_type: picker_type
  %}
{% endcomment %}
{%- liquid
  assign product_form_id = 'product-form-' | append: section.id
-%}

{%- for value in option.values -%}
  {%- liquid
    assign swatch_focal_point = null
    if value.swatch.image
      assign image_url = value.swatch.image | image_url: width: 50
      assign swatch_value = 'url(' | append: image_url | append: ')'
      assign swatch_focal_point = value.swatch.image.presentation.focal_point
    elsif value.swatch.color
      assign swatch_value = 'rgb(' | append: value.swatch.color.rgb | append: ')'
    else
      assign swatch_value = null
    endif

    assign option_disabled = true
    if value.available
      assign option_disabled = false
    endif
  -%}

  {%- capture input_id -%}
    {{ section.id }}-{{ option.position }}-{{ forloop.index0 -}}
  {%- endcapture -%}

  {%- capture input_name -%}
    {{ option.name }}-{{ option.position }}
  {%- endcapture -%}

  {%- capture input_dataset -%}
    data-product-url="{{ value.product_url }}"
    data-option-value-id="{{ value.id }}"
  {%- endcapture -%}

  {%- capture label_unavailable -%}
    <span class="visually-hidden label-unavailable">
      {{- 'products.product.variant_sold_out_or_unavailable' | t -}}
    </span>
  {%- endcapture -%}

  {%- if picker_type == 'swatch' -%}
    {%- capture help_text -%}
      <span class="visually-hidden">{{ value | escape }}</span>
      {{ label_unavailable }}
    {%- endcapture -%}
    {%
      render 'swatch-input',
      id: input_id,
      name: input_name,
      value: value | escape,
      swatch: value.swatch,
      product_form_id: product_form_id,
      checked: value.selected,
      visually_disabled: option_disabled,
      shape: block.settings.swatch_shape,
      help_text: help_text,
      additional_props: input_dataset
    %}
  {%- elsif picker_type == 'button' -%}
    {%- assign color_mapping = 'chocolate:#4b3530,blueberry:#6a8bba,raspberry:#ce444d,peach:#9a2924,baby pink:#ffc0cb,lime yellow:#dfff00,white:#fff,pale blue:#bbeaea,classic rose:#ce80bd,blue:#250084,red:#cf2b2c,copper:#8d6b6d,emerald green:#629689,midnight purple:#82367e,hot pink:#eab7b4'
      | split: ','
    -%}
    <style>
        .size-div{
          border: solid 1px #b16ef4 !important;
          color: #000;
          background: #b16ef450 !important;
          width: fit-content !important;
          height: fit-content !important;
          padding: 2px 10px;
          font-size: 1.4rem;
        }
        .variant-div {
            display: inline-block;
            height: 30px;
            width: 30px;
            border-radius: 50%;
            margin: 5px;
            cursor: pointer;
            border: 1px solid #ccc;
            transition: transform 0.2s ease;
            background-color: transparent;
        }
        .variant-div.selected {
            transform: scale(1.1);
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1), 0px 1px 3px rgba(0, 0, 0, 0.06);
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }
        input[type='radio'], label {
          visibility: hidden;
      margin: 0;
      width: 0;
      height: 0;
      padding: 0;      }

        {%- for color in color_mapping -%}
            {%- assign key_value = color | split: ':' -%}
            {%- assign color_key = key_value[0] | downcase -%}
            {%- assign color_value = key_value[1] -%}
            .variant-div[data-color="{{ color_key }}"] {
                background-color: {{ color_value }} !important;
                color: {{ color_value }} !important;
            }
        {%- endfor -%}
    </style>

    <input
      type="radio"
      id="{{ input_id }}"
      name="{{ input_name | escape }}"
      value="{{ value | escape }}"
      form="{{ product_form_id }}"
      {% if value.selected %}
        checked
      {% endif %}
      {% if option_disabled %}
        class="disabled"
      {% endif %}
      {{ input_dataset }}
    >
    <div
      class="variant-div {% if value.selected %}selected{% endif %}"
      data-color="{{ value | downcase }}"
      data-input-id="{{ input_id }}"
    >
      .
    </div>
    <script>
      document.addEventListener('DOMContentLoaded', function () {
        function updateVariantDivs() {
          document.querySelectorAll('input[type="radio"]').forEach((input) => {
            const variantDiv = document.querySelector(`.variant-div[data-input-id="${input.id}"]`);

            if (variantDiv) {
              // Check if the value contains 'ml'
              if (input.value.toLowerCase().includes('ml')) {
                variantDiv.classList.add('size-div'); // Add the class
                variantDiv.textContent = input.value; // Change the text content
              } else {
                variantDiv.classList.remove('size-div'); // Remove the class
                variantDiv.textContent = '.'; // Reset content
              }
            }
          });
        }

        // Run function on page load to handle all variants
        updateVariantDivs();

        // Add event listener to update on change
        document.querySelectorAll('input[type="radio"]').forEach((input) => {
          input.addEventListener('change', function () {
            document.querySelectorAll('.variant-div').forEach((div) => {
              div.classList.remove('size-div'); // Remove the class from all
              div.textContent = '.'; // Reset all content
            });

            updateVariantDivs(); // Apply changes again
          });
        });
      });
    </script>

  {%- elsif picker_type == 'dropdown' or picker_type == 'swatch_dropdown' -%}
    <option
      id="{{ input_id }}"
      value="{{ value | escape }}"
      {% if value.selected %}
        selected="selected"
      {% endif %}
      {% if swatch_value and picker_type == 'swatch_dropdown' %}
        data-option-swatch-value="{{ swatch_value }}"
        {% if swatch_focal_point %}
          data-option-swatch-focal-point="{{ swatch_focal_point }}"
        {% endif %}
      {% endif %}
      {{ input_dataset }}
    >
      {% if option_disabled -%}
        {{- 'products.product.value_unavailable' | t: option_value: value -}}
      {%- else -%}
        {{- value -}}
      {%- endif %}
    </option>
  {%- endif -%}
{%- endfor -%}
